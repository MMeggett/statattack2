<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Leagues</title>
    <!-- Include Handlebars from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/handlebars.min.js"></script>
</head>
<body>
    <h1>Select Leagues</h1>
    <div class="leagues-container">
        <label class="league"><input type="checkbox" name="league" value="Superliga" id="636"> Superliga</label>
        <label class="league"><input type="checkbox" name="league" value="A-League Men" id="1356"> A-League Men</label>
        <label class="league"><input type="checkbox" name="league" value="Serie A" id="648"> Serie A</label>
        <label class="league"><input type="checkbox" name="league" value="Super League" id="989"> Super League</label>
        <label class="league"><input type="checkbox" name="league" value="Liga BetPlay" id="672"> Liga BetPlay</label>
        <label class="league"><input type="checkbox" name="league" value="Superliga" id="271"> Superliga</label>
        <label class="league"><input type="checkbox" name="league" value="Premier League" id="8"> Premier League</label>
        <label class="league"><input type="checkbox" name="league" value="Ligue 1" id="301"> Ligue 1</label>
        <label class="league"><input type="checkbox" name="league" value="Bundesliga" id="82"> Bundesliga</label>
        <label class="league"><input type="checkbox" name="league" value="Serie A" id="384"> Serie A</label>
        <label class="league"><input type="checkbox" name="league" value="Liga MX" id="743"> Liga MX</label>
        <label class="league"><input type="checkbox" name="league" value="Eredivisie" id="72"> Eredivisie</label>
        <label class="league"><input type="checkbox" name="league" value="Primera Division" id="764"> Primera Division</label>
        <label class="league"><input type="checkbox" name="league" value="Liga Portugal" id="462"> Liga Portugal</label>
        <label class="league"><input type="checkbox" name="league" value="Premiership" id="501"> Premiership</label>
        <label class="league"><input type="checkbox" name="league" value="La Liga" id="564"> La Liga</label>
        <label class="league"><input type="checkbox" name="league" value="Super Lig" id="600"> Super Lig</label>
        <label class="league"><input type="checkbox" name="league" value="Major League Soccer" id="779"> Major League Soccer</label>
    </div>
    <button id="showSelectedLeagues">Show Selected Leagues</button>

    <!-- Handlebars template -->
    <script id="standings-template" type="text/x-handlebars-template">
        <h1>League Standings</h1>
        <div id="standings-container">
            {{#if standings.length}}
                {{#each standings}}
                    <h2>{{league_name}}</h2>
                    <p>League Data Exists</p>
                    <table>
                        <thead>
                            <tr>
                                <th>Position</th>
                                <th>Team ID</th>
                                <th>Points</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each teams}}
                                <tr>
                                    <td>{{position}}</td>
                                    <td>{{participant_id}}</td>
                                    <td>{{points}}</td>
                                </tr>
                            {{/each}}
                        </tbody>
                    </table>
                {{/each}}
            {{else}}
                <p>No standings available</p>
            {{/if}}
        </div>
        <button onclick="window.history.back()">Go Back</button>
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('showSelectedLeagues').addEventListener('click', async () => {
                const selectedLeagues = Array.from(document.querySelectorAll('input[name="league"]:checked'))
                                             .map(input => input.id);

                try {
                    const standings = await Promise.all(selectedLeagues.map(async leagueId => {
                        const apiUrl = `/api/teams/api/standings/${leagueId}`;
                        const response = await fetch(apiUrl);

                        if (!response.ok) {
                            throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);
                        }

                        const data = await response.json();
                        console.log('API Response:', data); // Log the API response to inspect its structure

                        // Verify the structure and handle it accordingly
                        if (!data.data) {
                            console.error('Unexpected API response structure:', data);
                            throw new Error('Unexpected API response structure');
                        }

                        return {
                            league_name: `League ID: ${leagueId}`, // Since the response does not include league name, using league ID for now
                            teams: data.data.map(team => ({
                                position: team.position,
                                participant_id: team.participant_id, // Assuming participant_id represents the team ID
                                points: team.points
                            }))
                        };
                    }));

                    console.log('Standings Data:', JSON.stringify(standings, null, 2)); // Log the data passed to the template

                    // Compile and render the template
                    const templateScript = document.getElementById('standings-template').innerHTML;
                    const template = Handlebars.compile(templateScript);
                    const standingsHtml = template({ standings });
                    console.log('Rendered HTML:', standingsHtml); // Log the rendered HTML for debugging

                    // Create a new container and append the rendered HTML
                    const standingsContainer = document.createElement('div');
                    standingsContainer.innerHTML = standingsHtml;
                    document.body.appendChild(standingsContainer);
                } catch (error) {
                    console.error('Error fetching league standings:', error);
                    alert(`Failed to fetch league standings. Error: ${error.message}`);
                }
            });
        });
    </script>
</body>
</html>
